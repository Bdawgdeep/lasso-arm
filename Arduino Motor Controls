//Recieves data from raspberry pi to make decisions about the mechanical arm.
//Inputs will dictate if the mechanical arm will lower or raise, pinch or release. 
//This code will operate a servo motor to control the arm, while the DC motor will control the lasso 

// Include all the necessary libraries and definitions
const int offsetA = 1;
const int offsetB = 1;

#include <Servo.h>  
#include <SparkFun_TB6612.h>
#define AIN1 6
#define AIN2 7
#define PWMA 3
#define STBY 4


Servo arm;  // create servo object to control arm swing
// twelve servo objects can be created on most boards

int pos_arm = 0;    // Initial variable to store the servo position



void setup() 
{
  arm.attach(9);  // attaches the servo on pin 9 to the arm
  Serial.begin(9600);
  pinMode(AIN1,OUTPUT);
  pinMode(AIN2,OUTPUT);
  pinMode(PWMA,OUTPUT);
  pinMode(STBY,OUTPUT);
  digitalWrite(STBY,HIGH);
}


void loop() 
{

  if (Serial.available() > 0) { //Readinformation from the Pi
    long pass_grab = Serial.parseInt(); // to be changed to value passed by raspberry pi indicating when to initiate the lasso system
    if (pass_grab > 0){
        for (pos_arm = 0; pos_arm <= 95; pos_arm += 1) { // goes from 0 degrees to 180 degrees // in steps of 1 degree

        arm.write(pos_arm);              // tell servo to go to position in variable 'pos'
        delay(15);                      // waits 15ms for the servo to reach the position
    }
   
      delay(3000);                      //Delays before starting the lasso
      digitalWrite(AIN1, HIGH);
      digitalWrite(AIN2, LOW);
      analogWrite(PWMA, 100);           //PWM controls the speed of the motor
      delay(5000);                      //time for motor to close the lasso  
      digitalWrite(AIN1, HIGH);         //Locks motor in place to hold the passanger
      digitalWrite(AIN2, LOW);
      analogWrite(PWMA, 0); 
      for (pos_arm = 95; pos_arm <= 0; pos_arm -= 1) { // goes from 180 degrees to 0 degrees
      arm.write(pos_arm);              // tell servo to go to position in variable 'pos'
      delay(10);    
    }
    
    else if (pass_grab <0){
      for (pos_arm = 0; pos_arm <= 95; pos_arm += 1) { // goes from 0 degrees to 180 degrees // in steps of 1 degree
        arm.write(pos_arm);              // tell servo to go to position in variable 'pos'
        delay(15);                      // waits 15ms for the servo to reach the position
    }
              
    };
      digitalWrite(AIN1, LOW);          // Releases lasso
      digitalWrite(AIN2, HIGH);
      analogWrite(PWMA, 100); 
      delay(5000);                     //Release time
      digitalWrite(AIN1, HIGH);        //Brake
      digitalWrite(AIN2, LOW);         
      analogWrite(PWMA, 0); 
    }
    
  else {
      digitalWrite(AIN1, HIGH);
      digitalWrite(AIN2, LOW);
      analogWrite(PWMA, 0); 
  }
 }
}
